<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Title</title>
</head>
<body>
<div class="vis-weather">
    <h2 class="vh_hide">날씨정보</h2>
    <p class="weather-date"></p>
    <ul>
        <li class="weather-temp"></li>
        <li id="RN1">시간당강수량 : ?</li>
        <li class="weather-state-text"></li>
    </ul>
</div>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script src="https://code.jquery.com/jquery-latest.min.js"></script>
<!--<script type="text/javascript" src="./js/jquery.xdomainajax.js"></script>-->
<script type="text/javascript">
    getLocation();

    function getLocation(){
        if(navigator.geolocation){
            navigator.geolocation.getCurrentPosition(locationSuccess, locationError, geo_options);
        }else{
            console.log("지오 로케이션 없음")
        }
    };
    // getLocation

    function locationSuccess(p){
        var latitude = p.coords.latitude,
            longitude = p.coords.longitude;
        var rs = dfs_xy_conv("toXY",latitude,longitude);
        // 위도/경도 -> 기상청 좌표x / 좌표 y 변환
        realTimeWeather(rs.nx, rs.ny);
    }
    // locationSuccess

    function locationError(error){
        var errorTypes = {
            0 : "error",
            1 : "Not allowed",
            2 : "Unable to track location",
            3 : "Response timeout"
        };
        var errorMsg = errorTypes[error.code];
        console.log(errorMsg)
    }
    // locationError

    var geo_options = {
        enableHighAccuracy: true,
        maximumAge        : 30000,
        timeout           : 27000
    };
    // geo_options

    // LCC DFS 좌표변환을 위한 기초 자료
    //
    var RE = 6371.00877; // 지구 반경(km)
    var GRID = 5.0; // 격자 간격(km)
    var SLAT1 = 30.0; // 투영 위도1(degree)
    var SLAT2 = 60.0; // 투영 위도2(degree)
    var OLON = 126.0; // 기준점 경도(degree)
    var OLAT = 38.0; // 기준점 위도(degree)
    var XO = 43; // 기준점 X좌표(GRID)
    var YO = 136; // 기1준점 Y좌표(GRID)
    //
    // LCC DFS 좌표변환 ( code : "toXY"(위경도->좌표, v1:위도, v2:경도), "toLL"(좌표->위경도,v1:x, v2:y) )
    //
    function dfs_xy_conv(code, v1, v2) {
        var DEGRAD = Math.PI / 180.0;
        var RADDEG = 180.0 / Math.PI;

        var re = RE / GRID;
        var slat1 = SLAT1 * DEGRAD;
        var slat2 = SLAT2 * DEGRAD;
        var olon = OLON * DEGRAD;
        var olat = OLAT * DEGRAD;

        var sn = Math.tan(Math.PI * 0.25 + slat2 * 0.5) / Math.tan(Math.PI * 0.25 + slat1 * 0.5);
        sn = Math.log(Math.cos(slat1) / Math.cos(slat2)) / Math.log(sn);
        var sf = Math.tan(Math.PI * 0.25 + slat1 * 0.5);
        sf = Math.pow(sf, sn) * Math.cos(slat1) / sn;
        var ro = Math.tan(Math.PI * 0.25 + olat * 0.5);
        ro = re * sf / Math.pow(ro, sn);
        var rs = {};
        if (code == "toXY") {

            rs['lat'] = v1;
            rs['lng'] = v2;
            var ra = Math.tan(Math.PI * 0.25 + (v1) * DEGRAD * 0.5);
            ra = re * sf / Math.pow(ra, sn);
            var theta = v2 * DEGRAD - olon;
            if (theta > Math.PI) theta -= 2.0 * Math.PI;
            if (theta < -Math.PI) theta += 2.0 * Math.PI;
            theta *= sn;
            rs['nx'] = Math.floor(ra * Math.sin(theta) + XO + 0.5);
            rs['ny'] = Math.floor(ro - ra * Math.cos(theta) + YO + 0.5);
        }
        else {
            rs['nx'] = v1;
            rs['ny'] = v2;
            var xn = v1 - XO;
            var yn = ro - v2 + YO;
            ra = Math.sqrt(xn * xn + yn * yn);
            if (sn < 0.0) - ra;
            var alat = Math.pow((re * sf / ra), (1.0 / sn));
            alat = 2.0 * Math.atan(alat) - Math.PI * 0.5;

            if (Math.abs(xn) <= 0.0) {
                theta = 0.0;
            }
            else {
                if (Math.abs(yn) <= 0.0) {
                    theta = Math.PI * 0.5;
                    if (xn < 0.0) - theta;
                }
                else theta = Math.atan2(xn, yn);
            }
            var alon = theta / sn + olon;
            rs['lat'] = alat * RADDEG;
            rs['lng'] = alon * RADDEG;
        }
        return rs;
    }
    // dfs_xy_conv


    function realTimeWeather(nx,ny) {
        var today = new Date();
        var week = new Array('일', '월', '화', '수', '목', '금', '토');
        var year = today.getFullYear();
        var month = today.getMonth() + 1;
        var day = today.getDate();
        var hours = today.getHours();
        var minutes = today.getMinutes();
        $('.weather-date').html(month + "월 " + day + "일 " + week[today.getDay()] + "요일");
        /*
         * 기상청 30분마다 발표
         * 30분보다 작으면, 한시간 전 hours 값
         */
        if (minutes < 30) {
            hours = hours - 1;
            if (hours < 0) {
                // 자정 이전은 전날로 계산
                today.setDate(today.getDate() - 1);
                day = today.getDate();
                month = today.getMonth() + 1;
                year = today.getFullYear();
                hours = 23;
            }
        }
        /* example
         * 9시 -> 09시 변경 필요
         */
        if (hours < 10) {
            hours = '0' + hours;
        }
        if (month < 10) {
            month = '0' + month;
        }
        if (day < 10) {
            day = '0' + day;
        }
        today = year + "" + month + "" + day;
        /* 좌표 */
        /*var _nx = 98,//x좌표,
            _ny = 75,//y좌표,*/
        var apikey = "PG8sCezIEVyAJJCkSMeINV40rmHpB%2F32NSAIzyM4L2%2FPjjS7pFcDSNCWdlcZ17zgNv4pQm7UPMcppuYCUj30%2Bw%3D%3D",
            ForecastGribURL = "http://newsky2.kma.go.kr/service/SecndSrtpdFrcstInfoService2/ForecastGrib";
        ForecastGribURL += "?ServiceKey=" + apikey;
        ForecastGribURL += "&base_date=" + today;
        ForecastGribURL += "&base_time=" + hours + "00";
        ForecastGribURL += "&nx=" + nx + "&ny=" + ny;
        ForecastGribURL += "&pageNo=1&numOfRows=7";
        ForecastGribURL += "&_type=json";
        $.ajax({
            url: ForecastGribURL
            , type: 'GET'
            , cache: false
            // ,dataType:'json'
            , error: function (request, error) {
                console.log(arguments);
                alert("Cant do because:" + error);
            }
            , success: function (data, textStatus, jqXHR) {
                //alert("Done!")
                var myXML = rplLine(jqXHR.responseText);
                var result = myXML;
                console.log(result);
                var jsonObj = $.parseJSON('[' + result + ']');
                var rain_state = jsonObj[0].response.body.items.item[1].obsrValue;
                var rain = jsonObj[0].response.body.items.item[3].obsrValue;
                var sky = jsonObj[0].response.body.items.item[4].obsrValue;
                var temperature = jsonObj[0].response.body.items.item[5].obsrValue;
                $('.weather-temp').html(temperature.toFixed(1) + " ℃");
                $('#RN1').html("시간당강수량 : " + rain + "mm");
                if (rain_state != 0) {
                    switch (rain_state) {
                        case 1:
                            $('.weather-state-text').html("비");
                            break;
                        case 2:
                            $('.weather-state-text').html("비/눈");
                            break;
                        case 3:
                            $('.weather-state-text').html("눈");
                            break;
                    }
                } else {
                    switch (sky) {
                        case 1:
                            $('.weather-state-text').html("맑음");
                            break;
                        case 2:
                            $('.weather-state-text').html("구름조금");
                            break;
                        case 3:
                            $('.weather-state-text').html("구름많음");
                            break;
                        case 4:
                            $('.weather-state-text').html("흐림");
                            break;
                    }
                } //if 종료
            } //success func 종료
        });
    }
    function rplLine(value) {
        if (value != null && value != "") {
            return value.replace(/\n/g, "\\n");
        } else {
            return value;
        }
    }
</script>
</body>
</html>